#!/usr/bin/env ruby

require 'csv'
require 'pg'
require 'ostruct'

mappings = {
  'Chestnut Hill:25'    => 'Boston',
  'Honolulu:15'         => 'Urban Honolulu',
  'Athens:13'           => 'Athens-Clarke County unified government (balance)',
  'University Park:42'  => 'State College',
  'Boise:16'            => 'Boise City',
  'Lexington:21'        => 'Lexington-Fayette',
  'Piscataway:34'       => 'New Brunswick',
  'Louisville:21'       => 'Louisville/Jefferson County metro government (balance)',
  'Amherst:36'          => 'Williamsville',
  'Nashville:47'        => 'Nashville-Davidson metropolitan government (balance)',
  'Fork Union:51'       => 'Weber City',
  'Indianapolis'        => 'Indianapolis city (balance)',
  'Ft. Lauderdale:12'   => 'Fort Lauderdale',
  'Klien:48'            => 'Houston',
  'Brooklyn:36'         => 'New York',
  'Ventura:06'          => 'San Buenaventura (Ventura)',
  'Woodland Hills:06'   => 'Los Angeles',
  'Harbor City:06'      => 'Los Angeles',
  'Wilmington:06'       => 'Los Angeles',
  'Sherman Oaks:06'     => 'Los Angeles',
  'Encino:06'           => 'Los Angeles',
  'Venice:06'           => 'Los Angeles'
}

schools = {}
conn = PG.connect(:dbname => 'nhgis')
stadiums = CSV.read('data/stadiums.csv', :headers => true).map do |st|
  OpenStruct.new(st.to_hash)
end

states = CSV.read('data/states.csv', :headers => true).map do |st|
  OpenStruct.new(st.to_hash)
end

# (select RandomPointsInPolygon(portland_blocks.geom, nhgis_data.h8c002) as geom from portland_blocks  LEFT JOIN nhgis_data ON portland_blocks.gisjoin = nhgis_data.gisjoin WHERE nhgis_data.h8c002 > 0) as points
unfound_recruits = {}
i = 0
CSV.foreach('data/recruits.csv', :headers => true) do |recruit|
  puts i
  i += 1
  recruit = OpenStruct.new(recruit.to_hash)
  school = stadiums.detect { |s| [s.team, s.alt].include?(recruit.institution) }
  if school
    schools[school.team] ||= 0
    schools[school.team] += 1

    state = states.detect do |st|
      state = st.state.strip.downcase
      city, state2 = recruit.location.split(',')
      state == state2.strip.downcase
    end

    city,_ = recruit.location.split(',')

    city = mappings["#{city}:#{state.fips}"] if !mappings["#{city}:#{state.fips}"].nil?

    conn.exec("SELECT name FROM nhgis_places WHERE name=$1 AND statefp=$2", [city, state.fips]) do |res|
      if res.first.nil?
        unfound_recruits[recruit.location] ||= 0
        unfound_recruits[recruit.location] += 1
      end
    end


    # conn.exec("SELECT geom, RandomPointsInPolygon(nhgis_places.geom, 1) FROM nhgis_places WHERE gid=$1", [school.place_gid]) do |res|
    #   puts res.first.inspect
    # end

  end
end

puts unfound_recruits.length
puts unfound_recruits.sort_by { |k,v| v }.inspect
